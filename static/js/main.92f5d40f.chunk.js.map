{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Userinfor.jsx","components/Editable.jsx","components/Users.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Userinfor","d","handleDeleteClick","handleEditClick","useParams","className","fullName","address","phonenumber","email","type","onClick","id","Editable","editFormData","handleEditformChange","handleCancelClick","required","placeholder","name","value","onChange","Users","useState","data","contacts","setContacts","editcontactId","setEditContactId","addFormData","setAddFormData","editformData","setEditformData","event","preventDefault","fieldName","target","getAttribute","fieldValue","newformData","handleAddFormChange","e","contactId","newContacts","index","findIndex","contact","splice","formValues","onSubmit","newContact","nanoid","length","map","action","to","editedContact","path","handleEditFormChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92f5d40f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nimport { Router } from 'react-router';\r\nimport './Stylling.css';\r\nimport data from './mock-data.json';\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nconst Userinfor = ({d,handleDeleteClick,handleEditClick}) => {\r\n    // const [fullname, setfullname] = useState(\"\")\r\nconst  id = useParams();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"app-container\">\r\n            <div className=\"usersbox\">\r\n            {/* {JSON.stringify(id)} */}\r\n            \r\n            \r\n          \r\n            <p>Hi {d.fullName} your surname is {d.address}<br/>\r\n            and your location is {d.phonenumber} with email {d.email}</p>\r\n     \r\n                   \r\n        <button type=\"button\" onClick={()=>handleDeleteClick(d.id)} className=\"buttondelete\">Delete</button>\r\n        {/* <button type=\"button\" onClick={(event)=>handleEditClick(event,d)}>Edit/Update</button> */}\r\n        </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Userinfor;","import React from \"react\";\r\n\r\nconst Editable = ({editFormData,handleEditformChange,handleCancelClick}) => {\r\n    return ( \r\n        <tr>\r\n            <td>\r\n                <input type=\"text\" required=\"required\" \r\n                placeholder=\"Enter your name\" \r\n                name=\"fullName\"\r\n                value={editFormData.fullName}\r\n                onChange={handleEditformChange}></input>\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" required=\"required\" \r\n                placeholder=\"Enter your Surname\" \r\n                name=\"address\" value={editFormData.address}\r\n                onChange={handleEditformChange}></input>\r\n            </td>\r\n            <td>\r\n                <input type=\"text\" required=\"required\" \r\n                placeholder=\"Enter your Location\" \r\n                name=\"phonenumber\" value={editFormData.phonenumber}\r\n                onChange={handleEditformChange}></input>\r\n            </td>\r\n            <td>\r\n                <input type=\"email\" required=\"required\" \r\n                placeholder=\"Enter your email\" \r\n                name=\"email\" value={editFormData.email}\r\n                onChange={handleEditformChange}></input>\r\n            </td>\r\n            <td>\r\n                <button type=\"submit\">Save</button>\r\n                <button type=\"button\" onClick={handleCancelClick}>Cancel</button>\r\n            </td>\r\n        </tr>\r\n     );\r\n}\r\n \r\nexport default Editable;","import React,{useState,Fragment} from 'react';\r\nimport './Stylling.css';\r\nimport {BrowserRouter as Router,Link,Route,Switch} from 'react-router-dom';\r\nimport data from './mock-data.json';\r\nimport {nanoid} from 'nanoid';\r\nimport Userinfor from './Userinfor';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport Prop from './Prop';\r\nimport Editable from './Editable';\r\n\r\n\r\nconst Users = () => {\r\n    const [contacts,setContacts]=useState(data);\r\n    const [editcontactId,setEditContactId]=useState(null)\r\n    const [addFormData,setAddFormData]=useState(\r\n        {\r\n            fullName:'',\r\n            address:'',\r\n            phonenumber:'', \r\n            email:'' \r\n\r\n        }\r\n        \r\n    )\r\n    const [editformData,setEditformData]= useState({\r\n        fullName:'',\r\n            address:'',\r\n            phonenumber:'', \r\n            email:'' \r\n    })\r\n    const handleEditformChange=(event)=>\r\n    { \r\n        event.preventDefault();\r\n        const fieldName =event.target.getAttribute(\"name\")\r\n        const fieldValue = event.target.value;\r\n\r\n        const newformData ={...editformData};\r\n        newformData[fieldName]= fieldValue;\r\n        setEditformData(newformData)\r\n    }\r\n\r\n    const handleAddFormChange=(e)=>{\r\n        e.preventDefault();\r\n        const fieldName =e.target.getAttribute(\"name\");\r\n        const fieldValue =e.target.value;\r\n\r\n        const newformData={...addFormData}; \r\n        newformData[fieldName]=fieldValue;\r\n        setAddFormData(newformData); \r\n        \r\n    }\r\n\r\n    \r\n    const handleAddFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n        \r\n        const newContact={\r\n            id:nanoid(),\r\n            fullName:addFormData.fullName, \r\n            address:addFormData.address,\r\n            phonenumber:addFormData.phonenumber,\r\n            email:addFormData.email,\r\n            \r\n        };\r\n        const newContacts=[...contacts,newContact];\r\n    setContacts(newContacts);\r\n    \r\n    \r\n    };\r\n\r\n    \r\n\r\n   const handleDeleteClick=(contactId)=>{\r\n       const newContacts =[...contacts];\r\n\r\n       const index=contacts.findIndex((contact)=>contact.id === contactId)\r\n       newContacts.splice(index,1);\r\n\r\n       setContacts(newContacts);\r\n   } \r\n   \r\n   const handleEditClick = (event,contact)=>{\r\n       event.preventDefault();\r\n       setEditContactId(contact.id);\r\n       const formValues ={\r\n        fullName:contact.fullName,\r\n        address:contact.address,\r\n        phonenumber:contact.phonenumber, \r\n        email:contact.email   \r\n       }\r\n       setEditformData(formValues)\r\n   }\r\n\r\n   const handleEditFormSubmit =(event)=>{\r\n        event.preventDefault();\r\n        const editedContact ={\r\n            id:editcontactId,\r\n            fullName:editformData.fullName,\r\n            address:editformData.address,\r\n            phonenumber:editformData.phonenumber,\r\n            email:editformData.email,\r\n\r\n        }\r\n        const newContacts =[...contacts]\r\n        const index = contacts.findIndex((contact)=>contact.id === editcontactId)\r\n        newContacts[index]=editedContact;\r\n        setContacts(newContacts)\r\n        setEditformData(null)\r\n    }\r\n// const checkEmail = contacts.find((contact)=> contact.email ===  addFormData.email);\r\n// if(checkEmail){\r\n//     return toast.error(\"this email already exists\")\r\n// }\r\n    return ( \r\n        <Router>\r\n            <ToastContainer/>\r\n        <div className=\"coverpage\">\r\n        <form onSubmit={handleAddFormSubmit} className=\"form1\">\r\n            <h2>Registration Form</h2>\r\n            <table>\r\n                <tr>\r\n                    <td>Name</td>\r\n                    <td>\r\n                    <input type=\"text\"\r\n             name=\"fullName\"\r\n            \r\n              required=\"required\"\r\n              placeholder=\"Enter a name..\"\r\n              onChange={handleAddFormChange}></input>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Surname</td>\r\n                    <td>\r\n                    <input type=\"text\"\r\n             name=\"address\"\r\n              required=\"required\"\r\n              placeholder=\"Enter a Surname..\"\r\n              onChange={handleAddFormChange}/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Location</td>\r\n                    <td>\r\n                    <input type=\"text\"\r\n             name=\"phonenumber\"\r\n              required=\"required\"\r\n              placeholder=\"Enter a Location..\"\r\n              onChange={handleAddFormChange}/>\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Email</td>\r\n                    <td>\r\n                    <input type=\"email\"\r\n             name=\"email\"\r\n              required=\"required\"\r\n              placeholder=\"Enter a email..\"\r\n              onChange={handleAddFormChange}/>\r\n              \r\n                    </td>\r\n                </tr>\r\n                \r\n                <tr><button type=\"submit\">Add Users</button></tr>\r\n            </table>\r\n              \r\n        </form>\r\n        <div className=\"boxuser\" >\r\n       <h2>List of Users</h2>\r\n            \r\n\r\n        {contacts.length>0 ?(contacts.map((action) =>\r\n            <Link to={\"/UsersInfor/\"+ action.id} >\r\n            \r\n            <p>{action.fullName}  {action.address}    \r\n              </p></Link> )):(\r\n                  <div><h2>No Users.. </h2></div>\r\n              )\r\n            }\r\n            {/* {contacts.length>0 ?(contacts.map((action) =>\r\n// to={\"/UsersInfor/\"+ action.id}\r\n            <Link to=\"Prop\" >\r\n            \r\n            <p>{action.fullName}  {action.address}    \r\n              </p></Link> )):(\r\n                  <div>No Users </div>\r\n              )\r\n            } */}\r\n            </div>\r\n            <form onSubmit={handleEditFormSubmit}>\r\n            <Switch>\r\n            <Route path=\"/UsersInfor/:id\">\r\n                \r\n           {contacts.map((d)=>(\r\n               <Fragment>\r\n                   {editcontactId === d.id?(\r\n                    <Editable editFormData={editformData}\r\n                    handleEditFormChange={handleEditformChange}\r\n                    />\r\n                   ):(\r\n                    <Userinfor  d={d}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                    handleEditClick={handleEditClick}\r\n                    />\r\n                   )}\r\n                       \r\n                  \r\n                        </Fragment>\r\n                        ))}\r\n                    </Route>\r\n                   \r\n            </Switch>\r\n            </form>\r\n        </div>\r\n        </Router>\r\n     );\r\n}\r\n \r\nexport default Users;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Userinfor from './components/Userinfor';\nimport Users from './components/Users';\nReactDOM.render(\n  <React.StrictMode>\n    <Users/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}